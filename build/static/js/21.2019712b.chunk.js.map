{"version":3,"sources":["components/FavoriteCourse/FavoriteCourse.js"],"names":["CardCourse","lazy","style","makeStyles","theme","paper","padding","textAlign","color","palette","text","secondary","link","textDecoration","FavoriteCourse","classes","useState","favorites","setFavorites","useParams","email","setisLogout","favoComponentUpdate","setFavoComponentUpdate","useEffect","isLg","sessionStorage","getItem","user_id","purchase_url","env","axios","get","then","ret","data","favorite_courses","catch","er","getFavoriteCourse","Fragment","maxWidth","my","container","spacing","item","xs","className","mb","display","justifyContent","variant","component","fallback","length","map","ele","i","md","course_favo_status","is_favorite","course_favo_id","course_id"],"mappings":"gUAgBMA,EAAaC,gBAAK,kBAAM,wDAExBC,EAAQC,aAAW,SAACC,GAAD,MAAY,CACnCC,MAAO,CACLC,QAAS,GACTC,UAAW,SACXC,MAAOJ,EAAMK,QAAQC,KAAKC,WAG5BC,KAAM,CACJJ,MAAO,UACPK,eAAgB,OAChB,YAAa,CACXL,MAAO,UACPK,eAAgB,aAKP,SAASC,IACtB,IAAMC,EAAUb,IAChB,EAAkCc,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGA,GADkBC,cAAVC,MACwBJ,oBAAS,IAAzC,mBAAiBK,GAAjB,WACA,EAAsDL,oBAAS,GAA/D,mBAAOM,EAAP,KAA4BC,EAA5B,KA6BA,OAdAC,qBAAU,WAER,IAAMC,EAAOC,eAAeC,QAAQ,YAAY,GAC1CC,GAAWF,eAAeC,QAAQ,iBAAiB,GAGvDN,EAAYI,GAnBhB,SAA2BG,GAEzB,IAAMC,EAAY,UAAMC,IAAN,yCAAkDF,GACpEG,IACGC,IAAIH,EAAc,IAClBI,MAAK,SAACC,GACLhB,EAAagB,EAAIC,KAAKC,qBAEvBC,OAAM,SAACC,GACNpB,EAAa,OAejBqB,CAAkBX,KACjB,CAACN,IAGF,eAAC,IAAMkB,SAAP,WACE,cAAC,IAAD,CAAQnB,YAAaA,IAErB,cAAC,IAAD,CAAWoB,SAAS,KAApB,SACE,cAAC,IAAD,CAAKC,GAAI,GAAT,SACE,cAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,CAAOC,UAAWhC,EAAQV,MAA1B,UACE,cAAC,IAAD,CAAK2C,GAAI,EAAGC,QAAQ,OAAOR,UAAQ,EAACS,eAAe,aAAnD,SACE,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,+BAKF,cAAC,IAAD,CAAMT,WAAS,EAACC,QAAS,EAAzB,SACE,cAAC,WAAD,CAAUS,SAAU,6CAApB,SACwB,IAArBpC,EAAUqC,OACPrC,EAAUsC,KAAI,SAACC,EAAKC,GAClB,OACE,cAAC,IAAD,CAAMX,GAAI,GAAIY,GAAI,EAAGb,MAAI,EAAzB,SACE,cAAC7C,EAAD,aACE2D,mBAAoBH,EAAII,YACxBC,eAAgBL,EAAIM,UACpBxC,oBAAqBA,EACrBC,uBAAwBA,GACpBiC,KANuBC,MAWnC,qCASlB,cAAC,IAAD","file":"static/js/21.2019712b.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as env from '../../config/env.config';\r\nimport Footer from '../Footer/Footer';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n// import CardCourse from './../CardCourse/CardCourse';\r\nconst CardCourse = lazy(() => import('./../CardCourse/CardCourse'));\r\n\r\nconst style = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: 32,\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary\r\n  },\r\n\r\n  link: {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    '&:visited': {\r\n      color: 'inherit',\r\n      textDecoration: 'none'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function FavoriteCourse() {\r\n  const classes = style();\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  const { email } = useParams();\r\n  const [isLogout, setisLogout] = useState(true);\r\n  const [favoComponentUpdate, setFavoComponentUpdate] = useState(false);\r\n\r\n  function getFavoriteCourse(user_id) {\r\n    // favorite courses\r\n    const purchase_url = `${env.DEV_URL}/api/student/favorite-courses/${user_id}`;\r\n    axios\r\n      .get(purchase_url, {})\r\n      .then((ret) => {\r\n        setFavorites(ret.data.favorite_courses);\r\n      })\r\n      .catch((er) => {\r\n        setFavorites([]);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // nav\r\n    const isLg = sessionStorage.getItem('isLogout', false);\r\n    const user_id = +sessionStorage.getItem('user_login_id', false);\r\n\r\n    if (isLg !== null) {\r\n      setisLogout(isLg);\r\n    } else {\r\n      setisLogout(isLg);\r\n    }\r\n\r\n    getFavoriteCourse(user_id);\r\n  }, [favoComponentUpdate]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar setisLogout={setisLogout} />\r\n\r\n      <Container maxWidth='lg'>\r\n        <Box my={12}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Box mb={6} display='flex' maxWidth justifyContent='flex-start'>\r\n                  <Typography variant='h4' component='p'>\r\n                    Favorite course\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Grid container spacing={4}>\r\n                  <Suspense fallback={<div>...loading</div>}>\r\n                    {favorites.length !== 0\r\n                      ? favorites.map((ele, i) => {\r\n                          return (\r\n                            <Grid xs={12} md={3} item key={i}>\r\n                              <CardCourse\r\n                                course_favo_status={ele.is_favorite}\r\n                                course_favo_id={ele.course_id}\r\n                                favoComponentUpdate={favoComponentUpdate}\r\n                                setFavoComponentUpdate={setFavoComponentUpdate}\r\n                                {...ele}\r\n                              />\r\n                            </Grid>\r\n                          );\r\n                        })\r\n                      : 'There is no course!'}\r\n                  </Suspense>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}