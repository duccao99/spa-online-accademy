{"version":3,"sources":["components/ForgotPassword/ForgotPassword.js"],"names":["useStyles","makeStyles","theme","root","color","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","helperText","link","textDecoration","ForgotPassword","classes","useState","is_email_error","set_is_email_error","is_pass_error","set_is_pass_error","user_name","email","set_email","password","set_password","createStudentAccount","e","url","env_config","data","config","axios","post","then","ret","auth_url","auth_data","swal2Timing","catch","er","console","log","handleFormSubmit","preventDefault","which","useEffect","component","maxWidth","className","variant","noValidate","onKeyPress","onSubmit","container","item","xs","required","fullWidth","id","label","name","autoComplete","onChange","target","value","validator","isEmail","FormHelperTextProps","type","length","onClick","justify","to","mt"],"mappings":"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","file":"static/js/22.bb94cb20.chunk.js","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport * as env_config from '../../config/env.config';\r\nimport { swal2Timing } from '../../config/swal2.config';\r\nimport Copyright from './../Copyright/Copyright';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '.MuiFormHelperText-root': {\r\n      color: 'red'\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n\r\n  helperText: {\r\n    color: 'red'\r\n  },\r\n  link: {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    '&:visited': {\r\n      color: 'inherit',\r\n      textDecoration: 'none'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const [is_email_error, set_is_email_error] = useState(false);\r\n  const [is_pass_error, set_is_pass_error] = useState(false);\r\n  const [user_name, set_user_name] = useState('');\r\n  const [email, set_email] = useState('');\r\n  const [password, set_password] = useState('');\r\n\r\n  const handleEmailChange = (e) => {\r\n    set_email(e.target.value);\r\n    if (validator.isEmail(email) === false) {\r\n      set_is_email_error(true);\r\n    } else {\r\n      set_is_email_error(false);\r\n    }\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    set_user_name(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    set_password(e.target.value);\r\n\r\n    if (e.target.value.length < 6) {\r\n      set_is_pass_error(true);\r\n    } else {\r\n      set_is_pass_error(false);\r\n    }\r\n  };\r\n  const handleForgotPasswordClick = (e) => {\r\n    handleFormSubmit(e);\r\n  };\r\n  const createStudentAccount = (e) => {\r\n    const url = `${env_config.DEV_URL}/api/user/sign-up`;\r\n    const data = {\r\n      user_name: user_name,\r\n      email: email,\r\n      password: password\r\n    };\r\n    const config = {};\r\n    axios\r\n      .post(url, data, config)\r\n      .then((ret) => {\r\n        // auth\r\n        const auth_url = `${env_config.DEV_URL}/api/auth`;\r\n        const auth_data = {\r\n          ...data\r\n        };\r\n\r\n        axios\r\n          .post(auth_url, auth_data, config)\r\n          .then((ret) => {\r\n            const title = 'Account created!';\r\n            const html = '';\r\n            const timer = 2000;\r\n            const icon = 'success';\r\n            swal2Timing(title, html, timer, icon);\r\n          })\r\n          .catch((er) => {\r\n            console.log(er);\r\n          });\r\n      })\r\n      .catch((er) => {\r\n        const title = 'Error!';\r\n        const html = '';\r\n        const timer = 2000;\r\n        const icon = 'error';\r\n        console.log(er);\r\n\r\n        swal2Timing(title, html, timer, icon);\r\n      });\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.which === 13) {\r\n      createStudentAccount();\r\n    }\r\n    createStudentAccount();\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.which === 13) {\r\n      handleFormSubmit(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs' className={classes.root}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Forgot password\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onKeyPress={handleKeyPress}\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='email'\r\n                label='Email Address'\r\n                name='email'\r\n                autoComplete='email'\r\n                className={classes.email}\r\n                onChange={handleEmailChange}\r\n                value={email}\r\n                FormHelperTextProps={{ className: classes.helperText }}\r\n                helperText={is_email_error === true ? 'Email invalid!' : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                id='password'\r\n                onChange={handlePasswordChange}\r\n                FormHelperTextProps={{\r\n                  className: classes.helperText\r\n                }}\r\n                helperText={\r\n                  is_pass_error === true ? 'At least 6 characters' : ''\r\n                }\r\n                autoComplete='current-password'\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n            onClick={handleForgotPasswordClick}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Grid container justify='flex-end'>\r\n            <Grid item>\r\n              <Link className={classes.link} to='/user/sign-in' variant='body2'>\r\n                Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}